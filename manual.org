#+startup: nofold

* geo
  ~geo~ is an Emacs Lisp library for retrieving live location data.
  It is extensible and allows for multiple backends.  To create backends,
  please view [[Creating Backends]].

  The primary endpoint for interfacing with ~geo~ is the Lisp variable
  ~geo-xdg-changed-hook~, which accepts functions accepting a single
  location argument.  The location objects are alists guaranteed to
  have 3 fields:
    - ~lat~ :: The latitude of the location.
    - ~lon~ :: The longitude of the location.
    - ~dt~ :: The time the location was recorded, in epoch seconds.

  Several convenience functions are provided for retrieving location fields:
    - ~geo-xdg-location-lat~ :: Returns the latitude of the location
    - ~geo-xdg-location-lon~ :: Returns the longitude of the location

** Creating Backends
   geo backends are primarily created via the function ~geo-enable-backend~,
   which accepts 3 arguments:
    - ~subscribe-function~ ::
      This should be a procedure accepting one argument, which is another
      function that should be called with the current location whenever
      it is changed, or the backend is created.
    - ~outdated-p-function~ ::
      This should be a procedure accepting zero arguments, that returns
      a non-nil value if the backend should be considered as containing
      potentially outdated data.
    - ~priority~ ::
      This should be a fixnum.  The higher the fixnum is, the more priority
      the backend will get.


* geo-xdg
  ~geo-xdg~ is an Emacs Lisp library for interfacing with the XDG
  GeoClue geolocation API.  There are 2 entry-points for using the API:
   - ~geo-xdg-last-location~ ::
     This variable stores the last recieved location, in a format
     described inside [[Location Format]].  It may be nil if no location
     exists.
   - ~geo-xdg-changed-hooks~ ::
     This hook stores a list of functions that accept a single argument
     ~LOCATION~, which should be the new location.  The functions are
     called whenever the current location is changed.

  geo-xdg is also a backend for the ~geo~ geolocation library.
  To use it with geo, append the following to your initialization files:
#+begin_src elisp
(require 'geo)
(require 'geo-xdg)
#+end_src

  To use geo-xdg, Emacs must be built with Dbus support.
** Location Format
   Locations in geo-xdg are guaranteed to be an alist, with the following elements:
    - ~lat~ :: The latitude of this location.  Always non-nil.
    - ~lon~ :: The longitude of this location.  Always non-nil.
    - ~alt~ :: The altitude of this location in metres.  May be nil.
    - ~speed~ :: The speed the device is traveling at.  May be nil.
    - ~description~ :: A short description of this location.  May be nil.

   There are several convenience functions that can be used to access location data:
    - ~geo-xdg-location-lat-long~ ::
      Return the latitude and longitude of the single
      argument as a cons pair.
    - ~geo-xdg-lat~ :: Return the latitude of the single argument.
    - ~geo-xdg-lon~ :: Return the longitude of the single argument.
** User Customization
   Certain aspects of geo-xdg can be customized by users via the following
   variables:

    - ~geo-xdg-cache-function~ ::
      A function that should return a cached location, or nil if none exists.
      The default value is ~geo-xdg-get-cache~.
    - ~geo-xdg-save-cache-function~ ::
      A function that accepts a single location value,
      which should be saved into the cache.

** User commands
   geo-xdg provides several commands that can be used to change geo-xdg behaviour:
    - ~geo-xdg-pause~ :: Stop receiving location updates
    - ~geo-xdg-resume~ :: Resume recieving location updates
    - ~geo-xdg-focus-changed~ ::
      A convenience function that disables or enables
      location updates, depending on whether Emacs has input focus.

      It should be attached to ~after-focus-change-function~.
      To use the function, append the following code to your init files:
#+begin_src elisp
(if (version<= "27" emacs-version)
    (add-function :after after-focus-change-function #'geo-xdg-focus-changed)
  (add-hook 'focus-in-hook #'geo-xdg-resume) ;; We don't have `after-focus-change-function'
  (add-hook 'focus-out-hook #'geo-xdg-pause))
#+end_src

* geo-xdg-solar
  ~geo-xdg-solar~ is a package that sets ~calendar-latitude~
  and ~calendar-longitude~ to the current location provided by
  geo-xdg.  When ~geo-xdg-solar~ is activated, the default cache
  function will also consider ~calendar-latitude~ and
  ~calendar-longitude~, and those variables will be set to the
  appropriate values whenever the location is changed.
** Using geo-xdg-solar
  To use geo-xdg-solar, place the following code in your initialization
  files, and place geo-xdg and geo-xdg-solar in your ~load-path~:
#+begin_src elisp
(require 'geo-xdg-solar)
#+end_src
